identity_and_access:
  sso_support:
    value: yes — Unlock with SSO via OpenID Connect (OIDC) only; no SAML/Kerberos.
      Supported IdPs include Okta, Microsoft Entra ID, OneLogin, Duo, and other OIDC
      providers.
    reference: https://support.1password.com/sso/
  sso_license_level_requirement:
    value: Business
    reference: https://support.1password.com/sso/
  scim_support:
    value: yes — SCIM 2.0 via self‑hosted 1Password SCIM Bridge; supports creating
      users and groups, managing group membership, and suspending users; integrates
      with Google Workspace, JumpCloud, Microsoft Entra ID, Okta, OneLogin, and Rippling.
    reference: https://support.1password.com/scim/
  scim_licensing_level_requirement:
    value: Business
    reference: https://support.1password.com/scim/
  scim_authentication_mechanisms:
    value: Bearer token plus scimsession file (both required); HTTPS/TLS; no basic
      auth.
    reference: https://support.1password.com/scim-deploy-azure/
  scim_authentication_acquisition_steps:
    value: 1) Sign in to 1Password.com as an owner or admin. 2) Go to Integrations
      > User Provisioning and select your IdP. 3) Follow the setup assistant to generate
      and download the scimsession file and copy the bearer token; save both in 1Password.
      4) Deploy the SCIM Bridge (GCP/DigitalOcean/Azure Container Apps or custom).
      5) Return to Integrations > Automated User Provisioning to manage Managed Groups
      and connect the IdP.
    reference: https://support.1password.com/scim/
  user_management_api_support:
    value: yes — via 1Password CLI (op) for provisioning, confirming, suspending,
      reactivating, deleting users; no general REST admin API for user management.
    reference: https://developer.1password.com/docs/cli/reference/management-commands/user
  user_management_api_licensing_level:
    value: Business (CLI provisioning requires a 1Password Business account and enabling
      CLI Provisioning/Provision Managers).
    reference: https://developer.1password.com/docs/cli/provision-users
  user_management_api_authentication_mechanisms:
    value: 1Password CLI authentication via desktop app integration (device‑bound)
      or manual sign‑in with account email, Secret Key, and account password; session
      tokens; Provision Managers group required for provisioning actions.
    reference: https://developer.1password.com/docs/cli/sign-in-manually/
  user_management_api_authentication_acquisition_steps:
    value: 1) Owner/admin enables CLI Provisioning in Provisioning settings (creates
      Provision Managers group). 2) Add authorized admins to Provision Managers. 3)
      Install 1Password CLI and sign in (via app integration or manual). 4) Use op
      user subcommands (provision/confirm/suspend/reactivate/delete) for lifecycle
      actions.
    reference: https://developer.1password.com/docs/cli/provision-users
  seat_costs:
  - license_level: Business — $7.99 USD per user/month, billed annually (per active
      user).
    active:
      value: yes — active users are billed per‑user.
      reference: https://support.1password.com/membership-billing-policy/
    suspended_disabled:
      value: no — suspended users are not billed.
      reference: https://support.1password.com/membership-billing-policy/
    archived:
      value: uncertain
      reference: no evidence
  lifecycle_options:
  - Invited (pending invitation)
  - Waiting to be confirmed (pending provision)
  - Active
  - Suspended
  - Reactivated
  - Deleted
  rbac_support:
    value: yes — built‑in roles/groups (Owners, Administrators, Security, Team Members)
      and custom groups; granular vault permissions.
    reference: https://support.1password.com/groups/
  rbac_api_assignment:
    value: yes — manage group membership and grant/revoke vault permissions via CLI
      (e.g., op group user grant/revoke; op vault user/group grant).
    reference: https://developer.1password.com/docs/cli/grant-revoke-vault-permissions
  documentation_links:
  - https://support.1password.com/sso/
  - https://support.1password.com/sso-configure-okta/
  - https://support.1password.com/sso-configure-entra/
  - https://support.1password.com/scim/
  - https://support.1password.com/scim-okta/
  - https://support.1password.com/scim-entra-id/
  - https://support.1password.com/scim-google-workspace/
  - https://support.1password.com/scim-jumpcloud/
  - https://support.1password.com/scim-rippling/
  - https://support.1password.com/scim-deploy-azure/
  - https://support.1password.com/scim-deploy-gcp/
  - https://developer.1password.com/docs/cli/provision-users
  - https://developer.1password.com/docs/cli/reference/management-commands/user
  - https://developer.1password.com/docs/cli/reference/management-commands/group/
  - https://developer.1password.com/docs/cli/grant-revoke-vault-permissions
  - https://developer.1password.com/docs/events-api/
  - https://developer.1password.com/docs/events-api/reference/
  - https://github.com/1Password/scim-examples
  - https://github.com/1Password/events-api-splunk
  - https://support.1password.com/add-remove-team-members/
  - https://support.1password.com/permission-enforcement/
  - https://1password.com/product/teams-small-business-password-manager
security_monitoring:
  event_logs:
    user_login:
      value: Sign-in attempts are available via the Events API and include who attempted
        to sign in, the time, source IP, client/app details, and for failures, the
        reason (e.g., bad password/second factor). These are retrieved from the signinattempts
        endpoint and mapped by SIEMs such as Elastic, which documents the exported
        fields including onepassword.client.*, source.ip, related.user, and event.*.
      reference: https://www.elastic.co/docs/current/en/integrations/1password
    role_assignment:
      value: Role/group membership changes are captured as audit events. The audit
        schema includes actions like Join Group, Leave Group, and Change Group Membership
        Role, with actor/object fields and aux details (user id/uuid/email and role).
        Group creation/deletion/updates and group vault access grant/revoke/update
        are also logged.
      reference: https://developer.1password.com/docs/events-api/audit-events/
    api_call:
      value: uncertain — documentation shows audit events for service accounts and
        service account tokens (create/verify/revoke) and general “integration” events,
        but there is no explicit evidence that every Business/administrative API request
        is logged as a discrete “API call” event beyond these categories.
      reference: https://developer.1password.com/docs/events-api/audit-events/
    data_export:
      value: Export actions are logged. Audit events include Export Vault and Export
        Report; item usage logs capture export actions (e.g., CSV/1PUX exports) when
        supported clients perform them. These events include actor, object, timestamps,
        and related context.
      reference: https://developer.1password.com/docs/events-api/audit-events/
    configuration_change:
      value: Configuration/security changes are audited, including SSO settings (enable/disable/change
        policy/grace values), multi-factor authentication enable/disable/update (per-user
        and for all users), firewall rule updates, and other account-level/security
        setting changes.
      reference: https://developer.1password.com/docs/events-api/audit-events/
    user_account_creation:
      value: 'User lifecycle events are logged via audit events and invites/provisioning:
        create/update invites, provisioning email send/resend, user state changes
        (verify/join/activate/reactivate/suspend/delete), and guest upgrades. These
        include actor/object and timestamps.'
      reference: https://developer.1password.com/docs/events-api/audit-events/
    security_policy_change:
      value: Security policy changes are recorded in audit events, including SSO policy
        modifications, MFA policy changes (including disabling for all users), firewall
        rules updates, and item sharing admin settings changes.
      reference: https://developer.1password.com/docs/events-api/audit-events/
  event_logs_licensing_level:
    value: Events Reporting (and the Events API) requires 1Password Business. Setup
      involves creating an Events Reporting integration and issuing a scoped bearer
      token for the event types to access.
    reference: https://support.1password.com/events-reporting/
  monitoring_products:
  - value: Splunk add-on “1Password Events Reporting for Splunk” ingests audit events,
      item usage, and sign-in attempts using a bearer token from the Integrations
      page.
    reference: https://support.1password.com/events-reporting-splunk/
  - value: Elastic Agent integration for 1Password documents field mappings and collects
      sign-in attempts, item usage (and audit events) via the Events API using httpjson.
    reference: https://www.elastic.co/docs/current/en/integrations/1password
  - value: Datadog Cloud SIEM integration pulls 1Password logs via the Events API
      (sign-in attempts, item usage, audit events) with a generated access token and
      provides OOTB dashboards and rules.
    reference: https://docs.datadoghq.com/integrations/onepassword/
  - value: Microsoft Sentinel connector (using Azure Functions) ingests sign-in attempts,
      item usage, and audit events into OnePasswordEventLogs_CL using the Events Reporting
      API.
    reference: https://learn.microsoft.com/en-us/azure/sentinel/data-connectors/1password
  - value: Sumo Logic Cloud-to-Cloud “1Password Source” polls sign-in attempts, item
      usage, and audit events via Events API on a five-minute interval.
    reference: https://help.sumologic.com/docs/send-data/hosted-collectors/cloud-to-cloud-integration-framework/1password-source/
  - value: Rapid7 InsightIDR guide supports ingestion of audit events, item usage,
      and sign-in attempts via a cloud connection using a 1Password Events API bearer
      token.
    reference: https://docs.rapid7.com/insightidr/1password/
  - value: Stellar Cyber connector ingests 1Password audit events, item usage, and
      sign-in attempts using Base URL (events.*) and API token from Events Reporting.
    reference: https://docs.stellarcyber.ai/prod-docs/5.3.x/Configure/Connectors/OnePassword-Connectors.htm
  - value: CrowdStrike Falcon Next-Gen SIEM marketplace “1Password Data Connector”
      ingests Business account activity (sign-in attempts, item usage, audit events)
      via the Events API for unified dashboards and alerts.
    reference: https://marketplace.crowdstrike.com/listings/1password-business-data-connector
  - value: Blumira Cloud Connector integrates with 1Password to ingest sign-in attempts,
      item usage, and event data using an Events API bearer token and host URL.
    reference: dubious claim, hallucinated reference
  ingestion_methods:
  - value: REST Events API over HTTPS with bearer token; endpoints include /api/v2/auditevents,
      /api/v2/itemusages, /api/v2/signinattempts; cursor-based pagination; 120-day
      API lookback.
    reference: https://developer.1password.com/docs/events-api/reference/
  - value: Splunk ingestion via the official 1Password add-on, configured with an
      Events API token and index mapping for each event type.
    reference: https://support.1password.com/events-reporting-splunk/
  - value: Elastic ingestion via Elastic Agent httpjson integration for 1Password,
      with documented exported fields for sign-in attempts and item usage.
    reference: https://www.elastic.co/docs/current/en/integrations/1password
  - value: Microsoft Sentinel ingestion via an Azure Functions-based data connector
      that periodically pulls Events API data into a Log Analytics custom table.
    reference: https://learn.microsoft.com/en-us/azure/sentinel/data-connectors/1password
  - value: Sumo Logic Cloud-to-Cloud “1Password Source” pulls data from events.* base
      URL with a bearer token, configurable for item usage and sign-in attempts (and
      audit events).
    reference: https://help.sumologic.com/docs/send-data/hosted-collectors/cloud-to-cloud-integration-framework/1password-source/
  - value: Datadog Cloud SIEM integration uses a generated bearer token from 1Password
      Integrations to pull audit events, item usage, and sign-in attempts, providing
      OOTB dashboards/detections.
    reference: https://docs.datadoghq.com/integrations/onepassword/
  log_export_options:
    tools_connectors:
      value: Export is primarily via the 1Password Events REST API using bearer tokens
        scoped to event types; base URLs are events.1password.{com/ca/eu/ent}. Endpoints
        support POST with reset/continuing cursors and rate limits; intended for SIEM
        ingestion and custom clients.
      reference: https://developer.1password.com/docs/events-api/reference/
  documentation_links:
  - https://support.1password.com/events-reporting/
  - https://developer.1password.com/docs/events-api/reference/
  - https://developer.1password.com/docs/events-api/audit-events/
  - https://developer.1password.com/docs/events-api/item-usage-actions/
  - https://support.1password.com/events-reporting-security/
  - https://support.1password.com/events-reporting-splunk/
  - https://www.elastic.co/docs/current/en/integrations/1password
  - https://docs.datadoghq.com/integrations/onepassword/
  - https://learn.microsoft.com/en-us/azure/sentinel/data-connectors/1password
  - https://help.sumologic.com/docs/send-data/hosted-collectors/cloud-to-cloud-integration-framework/1password-source/
  - https://docs.rapid7.com/insightidr/1password/
  - https://apps.splunk.com/app/5632/
  - https://marketplace.crowdstrike.com/listings/1password-business-data-connector
  - https://github.com/1Password/events-api-splunk
  - https://github.com/1Password/events-api-elastic
  - https://github.com/1Password/events-api-generic
  - https://github.com/Azure/Azure-Sentinel/blob/master/Solutions/1Password/README.md
  - https://support.1password.com/activity-log/
  - https://github.com/Azure/Azure-Sentinel/issues/11428
  - https://www.reddit.com/r/graylog/comments/1ipro9d
incident_response:
  suspend_user_api:
    value: Yes — via 1Password Admin Console and 1Password CLI. Admins can suspend
      a team member, which removes their access; note the support caveat that if the
      user’s device is offline when suspension occurs, local data remains accessible
      until the next time they unlock while online.
    reference: https://support.1password.com/add-remove-team-members/
  invalidate_sessions_api:
    value: Yes — programmatically suspend a user with 1Password CLI (op user suspend).
      Suspension immediately logs the user out of all devices; you can optionally
      delay deauthorization with --deauthorize-devices-after.
    reference: https://developer.1password.com/docs/cli/reference/management-commands/user
  revoke_api_key_api:
    value: Yes — programmatically revoke Connect server access tokens with 1Password
      CLI (op connect token delete). Other tokens (e.g., Events Reporting bearer tokens,
      Service Account tokens) can be revoked via the UI.
    reference: https://developer.1password.com/docs/cli/reference/management-commands/connect
  user_toggle_api:
    value: 'Yes — 1Password CLI supports toggling user status: op user suspend (to
      disable access and force logout) and op user reactivate (to re-enable).'
    reference: https://developer.1password.com/docs/cli/reference/management-commands/user
  user_status_api:
    value: Yes — 1Password CLI returns user state (ACTIVE, SUSPENDED, RECOVERY_* etc.)
      with op user get or op user list.
    reference: https://developer.1password.com/docs/cli/user-states/
  session_timeout_configuration:
    value: Yes — organizations can enforce auto‑lock (idle lock) via policy and MDM.
      With MDM, security.autolock.minutes accepts 0–480 (0 locks immediately when
      not in focus).
    reference: https://support.1password.com/mobile-device-management/
  known_automation_tools:
  - value: 1Password CLI user management — suspend/reactivate/delete users; supports
      immediate logout and optional delayed device deauthorization.
    reference: https://developer.1password.com/docs/cli/reference/management-commands/user
  - value: 1Password Events Reporting for Splunk — official Splunkbase add‑on that
      ingests sign‑in attempts, item usage, and audit events for detection/automation.
    reference: https://splunkbase.splunk.com/app/5632
  - value: Elastic 1Password integration — Elastic Agent integration to pull 1Password
      Events API data (sign‑in attempts, item usage, audit events) with ECS mappings.
    reference: https://www.elastic.co/docs/current/integrations/1password
  - value: Events API generic scripts — official sample collectors in JS, Python,
      Go, Ruby, PHP for pulling Events Reporting data.
    reference: https://github.com/1Password/events-api-generic
  - value: Events API Elastic Beat — open‑source libbeat shipper for forwarding 1Password
      events to Elastic.
    reference: https://github.com/1Password/events-api-elastic
  - value: Events API Splunk add‑on source code — open‑source implementation of 1Password’s
      Splunk integration.
    reference: https://github.com/1Password/events-api-splunk
  - value: Azure Function to Microsoft Sentinel — community integration to ingest
      1Password Events API into Sentinel for SOAR workflows.
    reference: https://github.com/jorgelgmz/onepassword-events-to-sentinel
  - value: JavaScript Connect SDK (@1password/connect) — programmatic client for 1Password
      Connect API used in automation and tooling.
    reference: https://www.npmjs.com/package/%401password/connect
  - value: Official Python SDK (onepassword-sdk) — programmatic secrets access and
      item management using Service Accounts.
    reference: https://pypi.org/project/onepassword-sdk/
  - value: Official JavaScript SDK (@1password/sdk) — programmatic access to secrets
      and items using Service Accounts for automation.
    reference: https://www.npmjs.com/package/%401password/sdk
  - value: Sumo Logic 1Password app — cloud‑to‑cloud source and dashboards for sign‑in,
      item usage, and audit events; supports monitors for alerting/automation.
    reference: https://help.sumologic.com/docs/integrations/saas-cloud/1password/
  documentation_links:
  - https://developer.1password.com/docs/cli/reference/management-commands/user
  - https://developer.1password.com/docs/cli/provision-users
  - https://support.1password.com/auto-lock-policy/
  - https://support.1password.com/firewall-rules/
  - https://support.1password.com/reports/
  - https://developer.1password.com/docs/events-api/reference
  - https://developer.1password.com/docs/events-api/audit-events/
  - https://developer.1password.com/docs/cli/reference/management-commands/connect
  - https://developer.1password.com/docs/service-accounts/manage-service-accounts/
  - https://support.1password.com/events-reporting-splunk/
  - https://support.1password.com/events-reporting-elastic/
  - https://support.1password.com/unrecognized-device/
  - https://support.1password.com/lost-device/
  - https://support.1password.com/team-policies/
  - https://developer.1password.com/docs/cli/user-states/
  - https://support.1password.com/sign-in-attempts-report/
